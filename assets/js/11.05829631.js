(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{424:function(t,s,a){t.exports=a.p+"assets/img/image-20210413132428249.c6c3d3b8.png"},425:function(t,s,a){t.exports=a.p+"assets/img/image-20210413133518095.b64884a5.png"},426:function(t,s,a){t.exports=a.p+"assets/img/image-20210413133610159.a4ad27af.png"},482:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_1-nosql入门和概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-nosql入门和概述"}},[t._v("#")]),t._v(" 1. NoSql入门和概述")]),t._v(" "),e("h2",{attrs:{id:"_1-1-nosql数据库的四大分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-nosql数据库的四大分类"}},[t._v("#")]),t._v(" 1.1 NoSQL数据库的四大分类")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("kv键值：")]),t._v(" "),e("p",[t._v("​\t\t\t典型介绍：  新浪：BerkeleyDB+redis")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\t 美团：redis+tair")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\t 阿里、百度：memcache+redis")])]),t._v(" "),e("li",[e("p",[t._v("文档型数据库（bson格式比较多）：")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\tCouchDB")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\tMongoDB（为主）：是一个基于分布式文件存储的数据库。由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。是\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  一个介于关系型数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。")])]),t._v(" "),e("li",[e("p",[t._v("列存储数据库：")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\tCassandra，HBase")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\t分布式文件系统")])]),t._v(" "),e("li",[e("p",[t._v("图关系数据库：并不是放图形的，放的是关系。比如：朋友圈社交网络、广告推荐系统。专注于构建关系图谱")]),t._v(" "),e("p",[t._v("​\t\t\t\t\t\t\t\tNeo4J，InfoGrid")])])]),t._v(" "),e("p",[t._v("四者对比：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(424),alt:"image-20210413132428249"}})]),t._v(" "),e("h2",{attrs:{id:"_1-2-分布式系统cap原理cap-base"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-分布式系统cap原理cap-base"}},[t._v("#")]),t._v(" 1.2 分布式系统CAP原理CAP+BASE")]),t._v(" "),e("p",[e("strong",[t._v("RDBMS（Relational Databasae Management System：关系型数据库）的ACID")]),t._v("：Atomicity（原子性）、Consistency（一致性）、Isolation（独立性）、Durability（持久性）")]),t._v(" "),e("p",[e("strong",[t._v("NoSQL的CAP")]),t._v("：Consistency（强一致性）、Availability（可用性）、Partition tolerance（分区容错性）")]),t._v(" "),e("p",[e("img",{attrs:{src:a(425),alt:"image-20210413133518095"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(426),alt:"image-20210413133610159"}})]),t._v(" "),e("h1",{attrs:{id:"_2-redis数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-redis数据类型"}},[t._v("#")]),t._v(" 2. Redis数据类型")]),t._v(" "),e("h2",{attrs:{id:"_2-1-关于rediskey的基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-关于rediskey的基本命令"}},[t._v("#")]),t._v(" 2.1 关于RedisKey的基本命令")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("keys *")])]),t._v(" "),e("li",[e("p",[t._v("exists key：判断某个key是否存在")])]),t._v(" "),e("li",[e("p",[t._v("move key db：当前库就没有了，被移动到db数据库中")])]),t._v(" "),e("li",[e("p",[t._v("expire key：为给定的ley设置过期时间，秒钟")])]),t._v(" "),e("li",[e("p",[t._v("ttl key：查看还有多少秒过期，-1表示永不过期，-2表示已过期")])]),t._v(" "),e("li",[e("p",[t._v("type ley：查看key的类型")]),t._v(" "),e("p",[t._v("补充： select index：选择数据库")]),t._v(" "),e("p",[t._v("​\t\t\tflushall：清空所有数据库")]),t._v(" "),e("p",[t._v("​\t\t\tflushdb：清空当前数据库")])])]),t._v(" "),e("h2",{attrs:{id:"_2-2-redis的五大数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-redis的五大数据类型"}},[t._v("#")]),t._v(" 2.2 Redis的五大数据类型")]),t._v(" "),e("ul",[e("li",[t._v("String字符串：redis最基本的数据类型，其类型是二进制安全的，意思是redis的String可以包含任何数据。比如jpg图片或者序列化图像")]),t._v(" "),e("li",[t._v("List列表：底层实际是链表")]),t._v(" "),e("li",[t._v("Hash哈希：")]),t._v(" "),e("li",[t._v("Set集合：无序集合，无重复，通过HashTable实现的。")]),t._v(" "),e("li",[t._v("ZSet有序集合")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-1-redis字符串-string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-redis字符串-string"}},[t._v("#")]),t._v(" 2.1.1 Redis字符串（String）")]),t._v(" "),e("ul",[e("li",[t._v("set/get/ del/ append/ strlen")]),t._v(" "),e("li",[t._v("incr/ decr/ incrby/ decrby，一定要是数字才能进行加减")]),t._v(" "),e("li",[t._v("getrange/ setrange")]),t._v(" "),e("li",[t._v("setex( set with expire ) / setnx( set if not exist )")]),t._v(" "),e("li",[t._v("mset/ mget/ msetnx（事务特性）")]),t._v(" "),e("li",[t._v("getset（先get再set）")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-2-redis列表-list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-redis列表-list"}},[t._v("#")]),t._v(" 2.1.2 Redis列表（List）")]),t._v(" "),e("p",[e("strong",[t._v("可重复")])]),t._v(" "),e("ul",[e("li",[t._v("lpush/rpush/lrange")]),t._v(" "),e("li",[t._v("lpop/rpop")]),t._v(" "),e("li",[t._v("lindex，按照索引下标获得元素")]),t._v(" "),e("li",[t._v("llen")]),t._v(" "),e("li",[t._v("lrem key，删除N个value")]),t._v(" "),e("li",[t._v("ltrim key 开始index 结束index，截取指定范围的之后再复制给key")]),t._v(" "),e("li",[t._v("rpoplpush 源列表 目的列表")]),t._v(" "),e("li",[t._v("lset key index value")]),t._v(" "),e("li",[t._v("linsert key before/after 值1 值2")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-3-redis集合-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-redis集合-set"}},[t._v("#")]),t._v(" 2.1.3 Redis集合（Set）")]),t._v(" "),e("p",[e("strong",[t._v("不可重复，无序")])]),t._v(" "),e("ul",[e("li",[t._v("sadd/smembers/sismember")]),t._v(" "),e("li",[t._v("scard，获取集合里面的元素个数")]),t._v(" "),e("li",[t._v("srem key value 删除集合中元素")]),t._v(" "),e("li",[t._v("srandmember key 某个整数（随机出几个数）")]),t._v(" "),e("li",[t._v("spop key 随机出栈")]),t._v(" "),e("li",[t._v("smove key1 key2 key1里某个值，作用是将key1里的某个值赋给key2")]),t._v(" "),e("li",[t._v("数学集合类：差集sdiff，交集sinter，并集sunion")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-4-redis哈希-hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-redis哈希-hash"}},[t._v("#")]),t._v(" 2.1.4 Redis哈希（Hash）")]),t._v(" "),e("p",[e("strong",[t._v("KV模式不变，但V是一个键值对")])]),t._v(" "),e("ul",[e("li",[t._v("hset/hget/hmset/hmget/hgetall/hdel")]),t._v(" "),e("li",[t._v("hlen")]),t._v(" "),e("li",[t._v("hexists key 在key里面的某个值的key")]),t._v(" "),e("li",[t._v("hkeys/hvals")]),t._v(" "),e("li",[t._v("hincrby/hincrbyfloat")]),t._v(" "),e("li",[t._v("hsetnx")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-5-redis有序集合zset-sorted-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-redis有序集合zset-sorted-set"}},[t._v("#")]),t._v(" 2.1.5 Redis有序集合Zset（sorted set）")]),t._v(" "),e("p",[e("strong",[t._v("在set基础上加一个score值。之前set是k1 v1 v2 v3，现在zset是k1 score1 v1  score2 v2")])]),t._v(" "),e("ul",[e("li",[t._v("zadd/zrange ... with score")]),t._v(" "),e("li",[t._v("zrangebyscore key 开始score 结束score")]),t._v(" "),e("li",[t._v("zrem key 某score下对应的value值，作用是删除元素")]),t._v(" "),e("li",[t._v("zcard/zcount key score区间/zrank key values值，作用是获得下标值/zscore key 对应值，获得分数")]),t._v(" "),e("li",[t._v("zrevrank key values值，作用是逆序获得下标值")]),t._v(" "),e("li",[t._v("zrevrange")]),t._v(" "),e("li",[t._v("zrevrangebyscore key 结束score 开始score")])]),t._v(" "),e("h2",{attrs:{id:"_2-3-redis的三种特殊数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-redis的三种特殊数据类型"}},[t._v("#")]),t._v(" 2.3 Redis的三种特殊数据类型")]),t._v(" "),e("h3",{attrs:{id:"_2-3-1-geospatial-地理位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-geospatial-地理位置"}},[t._v("#")]),t._v(" 2.3.1 geospatial 地理位置")]),t._v(" "),e("h3",{attrs:{id:"_2-3-2-hyperloglog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-hyperloglog"}},[t._v("#")]),t._v(" 2.3.2 hyperloglog")]),t._v(" "),e("h3",{attrs:{id:"_2-3-3-bitmaps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-bitmaps"}},[t._v("#")]),t._v(" 2.3.3 bitmaps")]),t._v(" "),e("h1",{attrs:{id:"_3-事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-事务"}},[t._v("#")]),t._v(" 3. 事务")]),t._v(" "),e("p",[t._v("==要么同时成功，要么同时失败，原子性！ Redis的单条命令是保证原子性的，但是事务不保证！==")]),t._v(" "),e("p",[t._v("Redis事务本质：一组命令的集合。一个事务中的所有命令都会被序列化，在事务执行过程中，会按照顺序一次性执行。且没有隔离级别的概念，所有的命令在事务中，并没有直接被执行，只有发起执行命令的时候才会执行！")]),t._v(" "),e("p",[t._v("Redis事务")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("开启事务：multi")])]),t._v(" "),e("li",[e("p",[t._v("命令入队")])]),t._v(" "),e("li",[e("p",[t._v("执行事务：exec")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" multi\nOK\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令入队")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" k1 v1\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" k2 v2\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get k2\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" k3 v3\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v2"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n")])])])])]),t._v(" "),e("p",[t._v("取消事务：discard")]),t._v(" "),e("h1",{attrs:{id:"_4-redis实现乐观锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-redis实现乐观锁"}},[t._v("#")]),t._v(" 4. Redis实现乐观锁")]),t._v(" "),e("p",[e("strong",[t._v("悲观锁：很悲观，认为什么时候都会出现问题，无论做什么都会加锁")])]),t._v(" "),e("p",[e("strong",[t._v("乐观锁：很乐观，认为什么时候都不会出问题，所以不会上锁，更新数据的时候去判断一下，在此期间是否有人修改过这个数据（mybatispuls的学习中使用version字段，获取version，更新的时候比较version），Redis使用Watch来实现。")])]),t._v(" "),e("h2",{attrs:{id:"redis监视测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis监视测试"}},[t._v("#")]),t._v(" Redis监视测试")]),t._v(" "),e("p",[t._v("正常执行成功！")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" money "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" out "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" money "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监视money")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" multi\nOK\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" decrby money "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incrby out "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nQUEUED\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),e("h1",{attrs:{id:"_5-springboot集成redis-自定义redistributiontemplate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-springboot集成redis-自定义redistributiontemplate"}},[t._v("#")]),t._v(" 5. SpringBoot集成Redis，自定义RedistributionTemplate")]),t._v(" "),e("p",[t._v("导入依赖：")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[t._v("        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("编写RedisConfig配置类")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConfig")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("redisTemplate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConnectionFactory")]),t._v(" redisConnectionFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" template "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConnectionFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisConnectionFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setKeySerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValueSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericJackson2JsonRedisSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHashKeySerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHashValueSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericJackson2JsonRedisSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("application.yml：")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.48.130\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n")])])]),e("p",[t._v("测试：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('@SpringBootTest\nclass RedisStudyApplicationTests {\n\n    @Autowired\n    @Qualifier("redisTemplate")\n    RedisTemplate redisTemplate;\n\n    @Test\n    void contextLoads() {\n        redisTemplate.opsForValue().\n                set("name2", "张三");\n        System.out.println(redisTemplate.opsForValue().get("name2"));\n\n    }\n\n}\n')])])]),e("p",[t._v("==SpringBoot连接本地虚拟机上的Reids时，要在虚拟机上开启RedisServer。当Java程序报错时，在虚拟机上设置防火请的6379端口打开即可。==")]),t._v(" "),e("h1",{attrs:{id:"_6-redis持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis持久化"}},[t._v("#")]),t._v(" 6. Redis持久化")]),t._v(" "),e("p",[e("strong",[t._v("Redis是一个内存数据库，数据保存在内存中，但是我们都知道内存的数据变化是很快的，也容易发生丢失。幸好Redis还为我们提供了持久化的机制，分别是RDB(Redis DataBase)和AOF(Append Only File)。")])]),t._v(" "),e("p",[t._v("参考：https://baijiahao.baidu.com/s?id=1654694618189745916&wfr=spider&for=pc")])])}),[],!1,null,null,null);s.default=n.exports}}]);