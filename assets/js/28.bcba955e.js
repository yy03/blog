(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{475:function(_,v,l){"use strict";l.r(v);var i=l(1),t=Object(i.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h1",{attrs:{id:"_1-目录结构"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-目录结构"}},[_._v("#")]),_._v(" 1. 目录结构")]),_._v(" "),l("p",[_._v("Linux的文件系统是采用级层式的树状目录结构，在此结构的最上层是根目录 ”/ “，然后在此目录下再创建其他目录。深刻理解Linux树状文件目录是非常重要的。")]),_._v(" "),l("p",[_._v("记住一句经典的话："),l("strong",[_._v("在Linux世界里，一切皆文件。")])]),_._v(" "),l("p",[_._v("在Linux中，各个目录下存放的内容都是规定好的，不是自己想放什么就放什么。")]),_._v(" "),l("ul",[l("li",[_._v("/bin：是Binary的缩写，这个目录存放着最经常用的命令")]),_._v(" "),l("li",[_._v("/sbin：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序")]),_._v(" "),l("li",[_._v("/home：存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般目录名是以用户的账号名命名")]),_._v(" "),l("li",[_._v("/root：该目录为系统管理员，也称作超级权限者的用户主目录")]),_._v(" "),l("li",[_._v("/lib：系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件，几乎所有的应用程序都需要用到这些共享库")]),_._v(" "),l("li",[_._v("/etc：所有的系统管理所需要配置的配置文件和子目录my.conf；比如安装了MySQL，则MySQL的配置文件就放在该目录下")]),_._v(" "),l("li",[_._v("/usr：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于Windows下的program files目录")]),_._v(" "),l("li",[_._v("/boot：存放的是启动Linux时使用的一些核心文件，包括一些连接文件及镜像文件")]),_._v(" "),l("li",[_._v("/opt：这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。默认为空")]),_._v(" "),l("li",[_._v("/usr/local：软件安装的目标目录，一般以源码安装的放在该目录下。")])]),_._v(" "),l("h1",{attrs:{id:"_2-用户和用户组"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-用户和用户组"}},[_._v("#")]),_._v(" 2. 用户和用户组")]),_._v(" "),l("ul",[l("li",[_._v("添加用户：useradd 用户名；也可以通过useradd -d 指定目录 用户名，给新创建的用户指定家目录")]),_._v(" "),l("li",[_._v("指定/修改密码：passwd 用户名")]),_._v(" "),l("li",[_._v("删除用户：userdel 用户名")]),_._v(" "),l("li",[_._v("查询用户信息：id 用户名")]),_._v(" "),l("li",[_._v("切换用户：su - 切换用户名")])]),_._v(" "),l("p",[l("strong",[_._v("用户组：")])]),_._v(" "),l("ul",[l("li",[_._v("添加组：groupadd 组名")]),_._v(" "),l("li",[_._v("删除组：groupdel 组名")]),_._v(" "),l("li",[_._v("添加用户时加上组：useradd -g 用户组 用户名")]),_._v(" "),l("li",[_._v("修改用户组：usermod -g 用户组 用户名")])]),_._v(" "),l("p",[l("strong",[_._v("用户和组相关文件")])]),_._v(" "),l("ul",[l("li",[_._v("/etc/passwd文件：用户的配置文件，记录用户的各种信息；每行的意义：用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录shell")]),_._v(" "),l("li",[_._v("/etc/shadow文件：口令的配置文件，每行的意义：登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志")]),_._v(" "),l("li",[_._v("/ect/group文件：组的配置文件，每行的意义：组名：口令：组标识号：组内用户列表")])]),_._v(" "),l("h1",{attrs:{id:"_3-压缩和解压指令"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3-压缩和解压指令"}},[_._v("#")]),_._v(" 3. 压缩和解压指令")]),_._v(" "),l("ul",[l("li",[_._v("gzip/gunzip指令：只能解压缩*.gz")]),_._v(" "),l("li",[_._v("zip/unzip指令：\n"),l("ul",[l("li",[_._v("基本语法：\n"),l("ul",[l("li",[_._v("zip [选项] **.zip 将要压缩的内容")]),_._v(" "),l("li",[_._v("unzip [选项] **.zip")])])]),_._v(" "),l("li",[_._v("zip常用选项 -r：递归压缩；")]),_._v(" "),l("li",[_._v("unzip常用选项 -d<目录>：指定解压后文件的存放目录")])])]),_._v(" "),l("li",[_._v("tar指令：打包指令，最后打包的文件是.tar.gz的文件\n"),l("ul",[l("li",[_._v("基本语法：tar [选项] xxx.tar.gz 要打包的内容")]),_._v(" "),l("li",[_._v("选项说明：\n"),l("ul",[l("li",[_._v("-c：产生.tar打包文件")]),_._v(" "),l("li",[_._v("-v：显示详细信息")]),_._v(" "),l("li",[_._v("-f：指定压缩后的文件名")]),_._v(" "),l("li",[_._v("-z：打包同时压缩")]),_._v(" "),l("li",[_._v("-x：解包.tar文件")])])])])])]),_._v(" "),l("h1",{attrs:{id:"_4-rpm于yum"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4-rpm于yum"}},[_._v("#")]),_._v(" 4. RPM于YUM")]),_._v(" "),l("h2",{attrs:{id:"_4-1-rpm包的管理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-rpm包的管理"}},[_._v("#")]),_._v(" 4.1 rpm包的管理")]),_._v(" "),l("ul",[l("li",[_._v("查询已安装的rpm列表：rpm -qa | grep xx")]),_._v(" "),l("li",[_._v("卸载rpm包：rpm -e RPM包名称；如果需要强制删除：rpm -e --nodeps 包名")]),_._v(" "),l("li",[_._v("安装rpm包：\n"),l("ul",[l("li",[_._v("基本语法：rpm -ivh 路径名称")]),_._v(" "),l("li",[_._v("参数说明：\n"),l("ul",[l("li",[_._v("i：install 安装")]),_._v(" "),l("li",[_._v("v：verbose 提示")]),_._v(" "),l("li",[_._v("h：hash：进度条")])])])])])]),_._v(" "),l("h2",{attrs:{id:"_4-2-yum"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-yum"}},[_._v("#")]),_._v(" 4.2 yum")]),_._v(" "),l("p",[_._v("Yum是基于rpm包的，能够从指定的服务器自动下载rpm包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包")]),_._v(" "),l("ul",[l("li",[_._v("查询指令：yum list | grep xxx")]),_._v(" "),l("li",[_._v("安装指令：yum install xxx")])]),_._v(" "),l("h1",{attrs:{id:"_5-服务管理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-服务管理"}},[_._v("#")]),_._v(" 5. 服务管理")]),_._v(" "),l("p",[_._v("服务（service）本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其他程序的请求，因此我们又称为守护进程，是Linux中非常重要的知识点。")]),_._v(" "),l("p",[_._v("在Centos7.0之后"),l("strong",[_._v("很多服务不在使用service，而是systemctl")])]),_._v(" "),l("ul",[l("li",[_._v("systemctl管理指令：基本语法：systemctl [start | stop | restart | status] 服务名")]),_._v(" "),l("li",[_._v("systemctl设置服务自启动状态：systemctl [enable | disable | is-enable] 服务名")]),_._v(" "),l("li",[_._v("firewall指令\n"),l("ul",[l("li",[_._v("打开端口：firewall-cmd --permanent --add-port=端口号/协议")]),_._v(" "),l("li",[_._v("关闭端口：firewall-cmd --permanent --remove-port=端口号/协议")]),_._v(" "),l("li",[_._v("重新载入才能生效：firewall-cmd --reload")]),_._v(" "),l("li",[_._v("查询端口是否开放：firewall-cmd --query-port=端口号/协议")])])])]),_._v(" "),l("h1",{attrs:{id:"_6-监控网络状态"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_6-监控网络状态"}},[_._v("#")]),_._v(" 6. 监控网络状态")]),_._v(" "),l("p",[_._v("查看系统网络情况netstat")]),_._v(" "),l("ul",[l("li",[_._v("基本语法：netstat [选项]")]),_._v(" "),l("li",[_._v("选项说明：\n"),l("ul",[l("li",[_._v("-an：按一定顺序排列输出")])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);